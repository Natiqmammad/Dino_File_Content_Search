
### 🦖 Dino File Content Search  

**Dino_File_Content_Search** is a high-performance, concurrent file content search tool built with **Rust**. It efficiently scans files for specific content while leveraging system capabilities to maximize performance.  

---

## ⚡ Features  
✅ **Multi-threaded & Asynchronous** – Blazing-fast search with Tokio.  
✅ **Optimized for Large Directories** – Handles thousands of files efficiently.  
✅ **Customizable Search Patterns** – Supports regex and plain text searches.  
✅ **System-Aware Resource Management** – Automatically adjusts to OS limits.  

---

## 🚀 Installation  

Clone the repository:  

```sh
git clone https://github.com/natiqmammad/Dino_File_Content_Search.git
cd Dino_File_Content_Search
```

Build the project using **Cargo**:  

```sh
cargo build --release
```

---

## 🔥 Optimizing System Limits for Maximum Performance  

By default, most systems have a limit on the number of open files. To prevent errors and enhance performance, increase the limit using:  

```sh
ulimit -n 65535
```

For **permanent changes**, update `/etc/security/limits.conf` (Linux users).  

---

## 🛠 Usage  

Run the search tool:  

```sh
cargo run --release -- <directory> "<search_pattern>"
```

Example:  

```sh
cargo run --release -- /home/user/docs "Rust programming"
```

---

## 🤝 Contributing  

Pull requests and suggestions are always welcome! Feel free to contribute and improve Dino_File_Content_Search.  

---

## 📜 License  

This project is **open-source** and available under the **MIT License**.  

---

Let me know if you want any modifications! 🚀🔥
